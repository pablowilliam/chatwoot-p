{"version":3,"sources":["webpack:///./node_modules/markdown-it-link-attributes/index.js","webpack:///./node_modules/urlpattern-polyfill/dist/urlpattern.js","webpack:///./node_modules/urlpattern-polyfill/index.js"],"names":["markdownitLinkAttributes","md","configs","Array","isArray","Object","freeze","defaultRender","renderer","rules","link_open","this","tokens","idx","options","env","self","config","link","i","href","attrs","attrIndex","length","matcher","findFirstMatchingConfig","attributes","keys","forEach","attr","value","attrPush","applyAttributes","renderToken","module","exports","_slicedToArray","arr","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_typeof","obj","constructor","prototype","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","_arrayLikeToArray","toString","slice","name","from","test","len","arr2","regexIdentifierStart","regexIdentifierPart","isASCII","str","extended","lexer","lenient","arguments","undefined","char","ErrorOrInvalid","msg","type","index","count","pattern","_j","error","concat","j","code","substr","parse","_options$prefixes","prefixes","defaultPattern","escapeString","delimiter","result","path","nameSet","Set","tryConsume","tryConsumeModifier","r","mustConsume","_tokens$i","nextType","consumeText","result2","DefaultEncodePart","encodePart","prefix","indexOf","finalName","has","add","suffix","modifier","open","_prefix","name2","pattern2","replace","flags","ignoreCase","tokensToRegexp","_step","_options$strict","strict","_options$start","start","_options$end","end","_options$encode","encode","x","endsWith","route","_iterator","token","mod","endToken","isEndDelimited","RegExp","pathToRegexp","groupsRegex","execResult","exec","source","regexpToRegexp","paths","parts","map","join","arrayToRegexp","stringToRegexp","DEFAULT_OPTIONS","sensitive","HOSTNAME_OPTIONS","PATHNAME_OPTIONS","maybeStripPrefix","startsWith","substring","treatAsIPv6Hostname","SPECIAL_SCHEMES","isSpecialScheme","protocol_regexp","_step2","_iterator2","scheme","defaultPortForProtocol","protocol","protocolEncodeCallback","input","toLowerCase","usernameEncodeCallback","url","URL","username","passwordEncodeCallback","password","hostnameEncodeCallback","hostname","ipv6HostnameEncodeCallback","portEncodeCallback","parseInt","standardURLPathnameEncodeCallback","pathname","pathURLPathnameEncodeCallback","searchEncodeCallback","search","hashEncodeCallback","hash","Parser","tokenList","internalResult","tokenIndex","tokenIncrement","componentStart","state","groupDepth","hostnameIPv6BracketDepth","shouldTreatAsStandardURL","get","rewind","isHashPrefix","changeState","isSearchPrefix","rewindAndSetState","isGroupClose","isGroupOpen","isProtocolSuffix","port","computeShouldTreatAsStandardURL","nextState","skip","nextIsAuthoritySlashes","isIdentityTerminator","isPathnameStart","isPasswordPrefix","isIPv6Open","isIPv6Close","isPortPrefix","newState","makeComponentString","changeStateWithoutSettingComponent","safeToken","isNonSpecialPatternChar","previousToken","componentCharStart","assign","regexp","COMPONENTS","DEFAULT_PATTERN","extractValues","baseURL","processBaseURLString","isPattern","escapePatternString","applyInit","init","_unused","canonicalizeProtocol","canonicalizeUsername","canonicalizePassword","canonicalizeHostname","canonicalizePort","isAbsolutePathname","slashIndex","lastIndexOf","includes","leadingSlash","canonicalizePathname","canonicalizeSearch","canonicalizeHash","tokensToPattern","segmentWildcardPattern","regexIdentifierPart2","lastToken","nextToken","customName","optionsPrefixes","needsGrouping","_code","URLPattern","baseURLOrOptions","component_pattern","parser","component","ignoreCaseOptions","defaults","_step3","_iterator3","options2","_unused2","message","values","_step4","_iterator4","inputs","_step5","_iterator5","match","_step6","groups","_iterator6","entries","_step6$value","globalThis"],"mappings":"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","file":"js/104-bfd93e2d5d50c501054c.chunk.js","sourcesContent":["\"use strict\"; // Adapted from https://github.com/markdown-it/markdown-it/blob/fbc6b0fed563ba7c00557ab638fd19752f8e759d/docs/architecture.md\n\nfunction findFirstMatchingConfig(link, configs) {\n  var i, config;\n  var href = link.attrs[link.attrIndex(\"href\")][1];\n\n  for (i = 0; i < configs.length; ++i) {\n    config = configs[i]; // If there is a matcher function defined then call it\n    // Matcher Function should return a boolean indicating\n    // whether or not it matched. If it matched, use that\n    // configuration, otherwise, try the next one.\n\n    if (typeof config.matcher === \"function\") {\n      if (config.matcher(href, config)) {\n        return config;\n      } else {\n        continue;\n      }\n    }\n\n    return config;\n  }\n}\n\nfunction applyAttributes(idx, tokens, attributes) {\n  Object.keys(attributes).forEach(function (attr) {\n    var attrIndex;\n    var value = attributes[attr];\n\n    if (attr === \"className\") {\n      // when dealing with applying classes\n      // programatically, some programmers\n      // may prefer to use the className syntax\n      attr = \"class\";\n    }\n\n    attrIndex = tokens[idx].attrIndex(attr);\n\n    if (attrIndex < 0) {\n      // attr doesn't exist, add new attribute\n      tokens[idx].attrPush([attr, value]);\n    } else {\n      // attr already exists, overwrite it\n      tokens[idx].attrs[attrIndex][1] = value; // replace value of existing attr\n    }\n  });\n}\n\nfunction markdownitLinkAttributes(md, configs) {\n  if (!configs) {\n    configs = [];\n  } else {\n    configs = Array.isArray(configs) ? configs : [configs];\n  }\n\n  Object.freeze(configs);\n  var defaultRender = md.renderer.rules.link_open || this.defaultRender;\n\n  md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n    var config = findFirstMatchingConfig(tokens[idx], configs);\n    var attributes = config && config.attrs;\n\n    if (attributes) {\n      applyAttributes(idx, tokens, attributes);\n    } // pass token to default renderer.\n\n\n    return defaultRender(tokens, idx, options, env, self);\n  };\n}\n\nmarkdownitLinkAttributes.defaultRender = function (tokens, idx, options, env, self) {\n  return self.renderToken(tokens, idx, options);\n};\n\nmodule.exports = markdownitLinkAttributes;","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// src/path-to-regex-modified.ts\nvar regexIdentifierStart = /(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/;\nvar regexIdentifierPart = /(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF])/;\n\nfunction isASCII(str, extended) {\n  return (extended ? /^[\\x00-\\xFF]*$/ : /^[\\x00-\\x7F]*$/).test(str);\n}\n\nfunction lexer(str) {\n  var lenient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var tokens = [];\n  var i = 0;\n\n  while (i < str.length) {\n    var char = str[i];\n\n    var ErrorOrInvalid = function ErrorOrInvalid(msg) {\n      if (!lenient) throw new TypeError(msg);\n      tokens.push({\n        type: \"INVALID_CHAR\",\n        index: i,\n        value: str[i++]\n      });\n    };\n\n    if (char === \"*\") {\n      tokens.push({\n        type: \"ASTERISK\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"+\" || char === \"?\") {\n      tokens.push({\n        type: \"MODIFIER\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({\n        type: \"ESCAPED_CHAR\",\n        index: i++,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({\n        type: \"OPEN\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({\n        type: \"CLOSE\",\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === \":\") {\n      var name = \"\";\n      var j = i + 1;\n\n      while (j < str.length) {\n        var code = str.substr(j, 1);\n\n        if (j === i + 1 && regexIdentifierStart.test(code) || j !== i + 1 && regexIdentifierPart.test(code)) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) {\n        ErrorOrInvalid(\"Missing parameter name at \".concat(i));\n        continue;\n      }\n\n      tokens.push({\n        type: \"NAME\",\n        index: i,\n        value: name\n      });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      var count = 1;\n      var pattern = \"\";\n\n      var _j = i + 1;\n\n      var error = false;\n\n      if (str[_j] === \"?\") {\n        ErrorOrInvalid(\"Pattern cannot start with \\\"?\\\" at \".concat(_j));\n        continue;\n      }\n\n      while (_j < str.length) {\n        if (!isASCII(str[_j], false)) {\n          ErrorOrInvalid(\"Invalid character '\".concat(str[_j], \"' at \").concat(_j, \".\"));\n          error = true;\n          break;\n        }\n\n        if (str[_j] === \"\\\\\") {\n          pattern += str[_j++] + str[_j++];\n          continue;\n        }\n\n        if (str[_j] === \")\") {\n          count--;\n\n          if (count === 0) {\n            _j++;\n            break;\n          }\n        } else if (str[_j] === \"(\") {\n          count++;\n\n          if (str[_j + 1] !== \"?\") {\n            ErrorOrInvalid(\"Capturing groups are not allowed at \".concat(_j));\n            error = true;\n            break;\n          }\n        }\n\n        pattern += str[_j++];\n      }\n\n      if (error) {\n        continue;\n      }\n\n      if (count) {\n        ErrorOrInvalid(\"Unbalanced pattern at \".concat(i));\n        continue;\n      }\n\n      if (!pattern) {\n        ErrorOrInvalid(\"Missing pattern at \".concat(i));\n        continue;\n      }\n\n      tokens.push({\n        type: \"PATTERN\",\n        index: i,\n        value: pattern\n      });\n      i = _j;\n      continue;\n    }\n\n    tokens.push({\n      type: \"CHAR\",\n      index: i,\n      value: str[i++]\n    });\n  }\n\n  tokens.push({\n    type: \"END\",\n    index: i,\n    value: \"\"\n  });\n  return tokens;\n}\n\nfunction parse(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var tokens = lexer(str);\n  var _options$prefixes = options.prefixes,\n      prefixes = _options$prefixes === void 0 ? \"./\" : _options$prefixes;\n  var defaultPattern = \"[^\".concat(escapeString(options.delimiter === void 0 ? \"/#?\" : options.delimiter), \"]+?\");\n  var result = [];\n  var key = 0;\n  var i = 0;\n  var path = \"\";\n  var nameSet = /* @__PURE__ */new Set();\n\n  var tryConsume = function tryConsume(type) {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  var tryConsumeModifier = function tryConsumeModifier() {\n    var r = tryConsume(\"MODIFIER\");\n\n    if (r) {\n      return r;\n    }\n\n    return tryConsume(\"ASTERISK\");\n  };\n\n  var mustConsume = function mustConsume(type) {\n    var value = tryConsume(type);\n    if (value !== void 0) return value;\n    var _tokens$i = tokens[i],\n        nextType = _tokens$i.type,\n        index = _tokens$i.index;\n    throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n  };\n\n  var consumeText = function consumeText() {\n    var result2 = \"\";\n    var value;\n\n    while (value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\")) {\n      result2 += value;\n    }\n\n    return result2;\n  };\n\n  var DefaultEncodePart = function DefaultEncodePart(value) {\n    return value;\n  };\n\n  var encodePart = options.encodePart || DefaultEncodePart;\n\n  while (i < tokens.length) {\n    var char = tryConsume(\"CHAR\");\n    var name = tryConsume(\"NAME\");\n    var pattern = tryConsume(\"PATTERN\");\n\n    if (!name && !pattern && tryConsume(\"ASTERISK\")) {\n      pattern = \".*\";\n    }\n\n    if (name || pattern) {\n      var prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(encodePart(path));\n        path = \"\";\n      }\n\n      var finalName = name || key++;\n\n      if (nameSet.has(finalName)) {\n        throw new TypeError(\"Duplicate name '\".concat(finalName, \"'.\"));\n      }\n\n      nameSet.add(finalName);\n      result.push({\n        name: finalName,\n        prefix: encodePart(prefix),\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsumeModifier() || \"\"\n      });\n      continue;\n    }\n\n    var value = char || tryConsume(\"ESCAPED_CHAR\");\n\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    var open = tryConsume(\"OPEN\");\n\n    if (open) {\n      var _prefix = consumeText();\n\n      var name2 = tryConsume(\"NAME\") || \"\";\n      var pattern2 = tryConsume(\"PATTERN\") || \"\";\n\n      if (!name2 && !pattern2 && tryConsume(\"ASTERISK\")) {\n        pattern2 = \".*\";\n      }\n\n      var suffix = consumeText();\n      mustConsume(\"CLOSE\");\n      var modifier = tryConsumeModifier() || \"\";\n\n      if (!name2 && !pattern2 && !modifier) {\n        path += _prefix;\n        continue;\n      }\n\n      if (!name2 && !pattern2 && !_prefix) {\n        continue;\n      }\n\n      if (path) {\n        result.push(encodePart(path));\n        path = \"\";\n      }\n\n      result.push({\n        name: name2 || (pattern2 ? key++ : \"\"),\n        pattern: name2 && !pattern2 ? defaultPattern : pattern2,\n        prefix: encodePart(_prefix),\n        suffix: encodePart(suffix),\n        modifier: modifier\n      });\n      continue;\n    }\n\n    if (path) {\n      result.push(encodePart(path));\n      path = \"\";\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?^${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\nfunction flags(options) {\n  return options && options.ignoreCase ? \"ui\" : \"u\";\n}\n\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path;\n  var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n  var index = 0;\n  var execResult = groupsRegex.exec(path.source);\n\n  while (execResult) {\n    keys.push({\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\"\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\nfunction arrayToRegexp(paths, keys, options) {\n  var parts = paths.map(function (path) {\n    return pathToRegexp(path, keys, options).source;\n  });\n  return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nfunction tokensToRegexp(tokens, keys) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$strict = options.strict,\n      strict = _options$strict === void 0 ? false : _options$strict,\n      _options$start = options.start,\n      start = _options$start === void 0 ? true : _options$start,\n      _options$end = options.end,\n      end = _options$end === void 0 ? true : _options$end,\n      _options$encode = options.encode,\n      encode = _options$encode === void 0 ? function (x) {\n    return x;\n  } : _options$encode;\n  var endsWith = \"[\".concat(escapeString(options.endsWith === void 0 ? \"\" : options.endsWith), \"]|$\");\n  var delimiter = \"[\".concat(escapeString(options.delimiter === void 0 ? \"/#?\" : options.delimiter), \"]\");\n  var route = start ? \"^\" : \"\";\n\n  var _iterator = _createForOfIteratorHelper(tokens),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var token = _step.value;\n\n      if (typeof token === \"string\") {\n        route += escapeString(encode(token));\n      } else {\n        var prefix = escapeString(encode(token.prefix));\n        var suffix = escapeString(encode(token.suffix));\n\n        if (token.pattern) {\n          if (keys) keys.push(token);\n\n          if (prefix || suffix) {\n            if (token.modifier === \"+\" || token.modifier === \"*\") {\n              var mod = token.modifier === \"*\" ? \"?\" : \"\";\n              route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n            } else {\n              route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n            }\n          } else {\n            if (token.modifier === \"+\" || token.modifier === \"*\") {\n              route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n            } else {\n              route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n            }\n          }\n        } else {\n          route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (end) {\n    if (!strict) route += \"\".concat(delimiter, \"?\");\n    route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWith, \")\");\n  } else {\n    var endToken = tokens[tokens.length - 1];\n    var isEndDelimited = typeof endToken === \"string\" ? delimiter.indexOf(endToken[endToken.length - 1]) > -1 : endToken === void 0;\n\n    if (!strict) {\n      route += \"(?:\".concat(delimiter, \"(?=\").concat(endsWith, \"))?\");\n    }\n\n    if (!isEndDelimited) {\n      route += \"(?=\".concat(delimiter, \"|\").concat(endsWith, \")\");\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n} // src/url-utils.ts\n\n\nvar DEFAULT_OPTIONS = {\n  delimiter: \"\",\n  prefixes: \"\",\n  sensitive: true,\n  strict: true\n};\nvar HOSTNAME_OPTIONS = {\n  delimiter: \".\",\n  prefixes: \"\",\n  sensitive: true,\n  strict: true\n};\nvar PATHNAME_OPTIONS = {\n  delimiter: \"/\",\n  prefixes: \"/\",\n  sensitive: true,\n  strict: true\n};\n\nfunction isAbsolutePathname(pathname, isPattern) {\n  if (!pathname.length) {\n    return false;\n  }\n\n  if (pathname[0] === \"/\") {\n    return true;\n  }\n\n  if (!isPattern) {\n    return false;\n  }\n\n  if (pathname.length < 2) {\n    return false;\n  }\n\n  if ((pathname[0] == \"\\\\\" || pathname[0] == \"{\") && pathname[1] == \"/\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction maybeStripPrefix(value, prefix) {\n  if (value.startsWith(prefix)) {\n    return value.substring(prefix.length, value.length);\n  }\n\n  return value;\n}\n\nfunction maybeStripSuffix(value, suffix) {\n  if (value.endsWith(suffix)) {\n    return value.substr(0, value.length - suffix.length);\n  }\n\n  return value;\n}\n\nfunction treatAsIPv6Hostname(value) {\n  if (!value || value.length < 2) {\n    return false;\n  }\n\n  if (value[0] === \"[\") {\n    return true;\n  }\n\n  if ((value[0] === \"\\\\\" || value[0] === \"{\") && value[1] === \"[\") {\n    return true;\n  }\n\n  return false;\n}\n\nvar SPECIAL_SCHEMES = [\"ftp\", \"file\", \"http\", \"https\", \"ws\", \"wss\"];\n\nfunction isSpecialScheme(protocol_regexp) {\n  if (!protocol_regexp) {\n    return true;\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(SPECIAL_SCHEMES),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var scheme = _step2.value;\n\n      if (protocol_regexp.test(scheme)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return false;\n}\n\nfunction canonicalizeHash(hash, isPattern) {\n  hash = maybeStripPrefix(hash, \"#\");\n\n  if (isPattern || hash === \"\") {\n    return hash;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.hash = hash;\n  return url.hash ? url.hash.substring(1, url.hash.length) : \"\";\n}\n\nfunction canonicalizeSearch(search, isPattern) {\n  search = maybeStripPrefix(search, \"?\");\n\n  if (isPattern || search === \"\") {\n    return search;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.search = search;\n  return url.search ? url.search.substring(1, url.search.length) : \"\";\n}\n\nfunction canonicalizeHostname(hostname, isPattern) {\n  if (isPattern || hostname === \"\") {\n    return hostname;\n  }\n\n  if (treatAsIPv6Hostname(hostname)) {\n    return ipv6HostnameEncodeCallback(hostname);\n  } else {\n    return hostnameEncodeCallback(hostname);\n  }\n}\n\nfunction canonicalizePassword(password, isPattern) {\n  if (isPattern || password === \"\") {\n    return password;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.password = password;\n  return url.password;\n}\n\nfunction canonicalizeUsername(username, isPattern) {\n  if (isPattern || username === \"\") {\n    return username;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.username = username;\n  return url.username;\n}\n\nfunction canonicalizePathname(pathname, protocol, isPattern) {\n  if (isPattern || pathname === \"\") {\n    return pathname;\n  }\n\n  if (protocol && !SPECIAL_SCHEMES.includes(protocol)) {\n    var url = new URL(\"\".concat(protocol, \":\").concat(pathname));\n    return url.pathname;\n  }\n\n  var leadingSlash = pathname[0] == \"/\";\n  pathname = new URL(!leadingSlash ? \"/-\" + pathname : pathname, \"https://example.com\").pathname;\n\n  if (!leadingSlash) {\n    pathname = pathname.substring(2, pathname.length);\n  }\n\n  return pathname;\n}\n\nfunction canonicalizePort(port, protocol, isPattern) {\n  if (defaultPortForProtocol(protocol) === port) {\n    port = \"\";\n  }\n\n  if (isPattern || port === \"\") {\n    return port;\n  }\n\n  return portEncodeCallback(port);\n}\n\nfunction canonicalizeProtocol(protocol, isPattern) {\n  protocol = maybeStripSuffix(protocol, \":\");\n\n  if (isPattern || protocol === \"\") {\n    return protocol;\n  }\n\n  return protocolEncodeCallback(protocol);\n}\n\nfunction defaultPortForProtocol(protocol) {\n  switch (protocol) {\n    case \"ws\":\n    case \"http\":\n      return \"80\";\n\n    case \"wws\":\n    case \"https\":\n      return \"443\";\n\n    case \"ftp\":\n      return \"21\";\n\n    default:\n      return \"\";\n  }\n}\n\nfunction protocolEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  if (/^[-+.A-Za-z0-9]*$/.test(input)) return input.toLowerCase();\n  throw new TypeError(\"Invalid protocol '\".concat(input, \"'.\"));\n}\n\nfunction usernameEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.username = input;\n  return url.username;\n}\n\nfunction passwordEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.password = input;\n  return url.password;\n}\n\nfunction hostnameEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  if (/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(input)) {\n    throw new TypeError(\"Invalid hostname '\".concat(input, \"'\"));\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.hostname = input;\n  return url.hostname;\n}\n\nfunction ipv6HostnameEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  if (/[^0-9a-fA-F[\\]:]/g.test(input)) {\n    throw new TypeError(\"Invalid IPv6 hostname '\".concat(input, \"'\"));\n  }\n\n  return input.toLowerCase();\n}\n\nfunction portEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  if (/^[0-9]*$/.test(input) && parseInt(input) <= 65535) {\n    return input;\n  }\n\n  throw new TypeError(\"Invalid port '\".concat(input, \"'.\"));\n}\n\nfunction standardURLPathnameEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.pathname = input[0] !== \"/\" ? \"/-\" + input : input;\n\n  if (input[0] !== \"/\") {\n    return url.pathname.substring(2, url.pathname.length);\n  }\n\n  return url.pathname;\n}\n\nfunction pathURLPathnameEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  var url = new URL(\"data:\".concat(input));\n  return url.pathname;\n}\n\nfunction searchEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.search = input;\n  return url.search.substring(1, url.search.length);\n}\n\nfunction hashEncodeCallback(input) {\n  if (input === \"\") {\n    return input;\n  }\n\n  var url = new URL(\"https://example.com\");\n  url.hash = input;\n  return url.hash.substring(1, url.hash.length);\n} // src/url-pattern-parser.ts\n\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(input) {\n    _classCallCheck(this, Parser);\n\n    this.tokenList = [];\n    this.internalResult = {};\n    this.tokenIndex = 0;\n    this.tokenIncrement = 1;\n    this.componentStart = 0;\n    this.state = 0\n    /* INIT */\n    ;\n    this.groupDepth = 0;\n    this.hostnameIPv6BracketDepth = 0;\n    this.shouldTreatAsStandardURL = false;\n    this.input = input;\n  }\n\n  _createClass(Parser, [{\n    key: \"result\",\n    get: function get() {\n      return this.internalResult;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      this.tokenList = lexer(this.input, true);\n\n      for (; this.tokenIndex < this.tokenList.length; this.tokenIndex += this.tokenIncrement) {\n        this.tokenIncrement = 1;\n\n        if (this.tokenList[this.tokenIndex].type === \"END\") {\n          if (this.state === 0\n          /* INIT */\n          ) {\n              this.rewind();\n\n              if (this.isHashPrefix()) {\n                this.changeState(9\n                /* HASH */\n                , 1);\n              } else if (this.isSearchPrefix()) {\n                this.changeState(8\n                /* SEARCH */\n                , 1);\n                this.internalResult.hash = \"\";\n              } else {\n                this.changeState(7\n                /* PATHNAME */\n                , 0);\n                this.internalResult.search = \"\";\n                this.internalResult.hash = \"\";\n              }\n\n              continue;\n            } else if (this.state === 2\n          /* AUTHORITY */\n          ) {\n              this.rewindAndSetState(5\n              /* HOSTNAME */\n              );\n              continue;\n            }\n\n          this.changeState(10\n          /* DONE */\n          , 0);\n          break;\n        }\n\n        if (this.groupDepth > 0) {\n          if (this.isGroupClose()) {\n            this.groupDepth -= 1;\n          } else {\n            continue;\n          }\n        }\n\n        if (this.isGroupOpen()) {\n          this.groupDepth += 1;\n          continue;\n        }\n\n        switch (this.state) {\n          case 0\n          /* INIT */\n          :\n            if (this.isProtocolSuffix()) {\n              this.internalResult.username = \"\";\n              this.internalResult.password = \"\";\n              this.internalResult.hostname = \"\";\n              this.internalResult.port = \"\";\n              this.internalResult.pathname = \"\";\n              this.internalResult.search = \"\";\n              this.internalResult.hash = \"\";\n              this.rewindAndSetState(1\n              /* PROTOCOL */\n              );\n            }\n\n            break;\n\n          case 1\n          /* PROTOCOL */\n          :\n            if (this.isProtocolSuffix()) {\n              this.computeShouldTreatAsStandardURL();\n              var nextState = 7\n              /* PATHNAME */\n              ;\n              var skip = 1;\n\n              if (this.shouldTreatAsStandardURL) {\n                this.internalResult.pathname = \"/\";\n              }\n\n              if (this.nextIsAuthoritySlashes()) {\n                nextState = 2\n                /* AUTHORITY */\n                ;\n                skip = 3;\n              } else if (this.shouldTreatAsStandardURL) {\n                nextState = 2\n                /* AUTHORITY */\n                ;\n              }\n\n              this.changeState(nextState, skip);\n            }\n\n            break;\n\n          case 2\n          /* AUTHORITY */\n          :\n            if (this.isIdentityTerminator()) {\n              this.rewindAndSetState(3\n              /* USERNAME */\n              );\n            } else if (this.isPathnameStart() || this.isSearchPrefix() || this.isHashPrefix()) {\n              this.rewindAndSetState(5\n              /* HOSTNAME */\n              );\n            }\n\n            break;\n\n          case 3\n          /* USERNAME */\n          :\n            if (this.isPasswordPrefix()) {\n              this.changeState(4\n              /* PASSWORD */\n              , 1);\n            } else if (this.isIdentityTerminator()) {\n              this.changeState(5\n              /* HOSTNAME */\n              , 1);\n            }\n\n            break;\n\n          case 4\n          /* PASSWORD */\n          :\n            if (this.isIdentityTerminator()) {\n              this.changeState(5\n              /* HOSTNAME */\n              , 1);\n            }\n\n            break;\n\n          case 5\n          /* HOSTNAME */\n          :\n            if (this.isIPv6Open()) {\n              this.hostnameIPv6BracketDepth += 1;\n            } else if (this.isIPv6Close()) {\n              this.hostnameIPv6BracketDepth -= 1;\n            }\n\n            if (this.isPortPrefix() && !this.hostnameIPv6BracketDepth) {\n              this.changeState(6\n              /* PORT */\n              , 1);\n            } else if (this.isPathnameStart()) {\n              this.changeState(7\n              /* PATHNAME */\n              , 0);\n            } else if (this.isSearchPrefix()) {\n              this.changeState(8\n              /* SEARCH */\n              , 1);\n            } else if (this.isHashPrefix()) {\n              this.changeState(9\n              /* HASH */\n              , 1);\n            }\n\n            break;\n\n          case 6\n          /* PORT */\n          :\n            if (this.isPathnameStart()) {\n              this.changeState(7\n              /* PATHNAME */\n              , 0);\n            } else if (this.isSearchPrefix()) {\n              this.changeState(8\n              /* SEARCH */\n              , 1);\n            } else if (this.isHashPrefix()) {\n              this.changeState(9\n              /* HASH */\n              , 1);\n            }\n\n            break;\n\n          case 7\n          /* PATHNAME */\n          :\n            if (this.isSearchPrefix()) {\n              this.changeState(8\n              /* SEARCH */\n              , 1);\n            } else if (this.isHashPrefix()) {\n              this.changeState(9\n              /* HASH */\n              , 1);\n            }\n\n            break;\n\n          case 8\n          /* SEARCH */\n          :\n            if (this.isHashPrefix()) {\n              this.changeState(9\n              /* HASH */\n              , 1);\n            }\n\n            break;\n\n          case 9\n          /* HASH */\n          :\n            break;\n\n          case 10\n          /* DONE */\n          :\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(newState, skip) {\n      switch (this.state) {\n        case 0\n        /* INIT */\n        :\n          break;\n\n        case 1\n        /* PROTOCOL */\n        :\n          this.internalResult.protocol = this.makeComponentString();\n          break;\n\n        case 2\n        /* AUTHORITY */\n        :\n          break;\n\n        case 3\n        /* USERNAME */\n        :\n          this.internalResult.username = this.makeComponentString();\n          break;\n\n        case 4\n        /* PASSWORD */\n        :\n          this.internalResult.password = this.makeComponentString();\n          break;\n\n        case 5\n        /* HOSTNAME */\n        :\n          this.internalResult.hostname = this.makeComponentString();\n          break;\n\n        case 6\n        /* PORT */\n        :\n          this.internalResult.port = this.makeComponentString();\n          break;\n\n        case 7\n        /* PATHNAME */\n        :\n          this.internalResult.pathname = this.makeComponentString();\n          break;\n\n        case 8\n        /* SEARCH */\n        :\n          this.internalResult.search = this.makeComponentString();\n          break;\n\n        case 9\n        /* HASH */\n        :\n          this.internalResult.hash = this.makeComponentString();\n          break;\n\n        case 10\n        /* DONE */\n        :\n          break;\n      }\n\n      this.changeStateWithoutSettingComponent(newState, skip);\n    }\n  }, {\n    key: \"changeStateWithoutSettingComponent\",\n    value: function changeStateWithoutSettingComponent(newState, skip) {\n      this.state = newState;\n      this.componentStart = this.tokenIndex + skip;\n      this.tokenIndex += skip;\n      this.tokenIncrement = 0;\n    }\n  }, {\n    key: \"rewind\",\n    value: function rewind() {\n      this.tokenIndex = this.componentStart;\n      this.tokenIncrement = 0;\n    }\n  }, {\n    key: \"rewindAndSetState\",\n    value: function rewindAndSetState(newState) {\n      this.rewind();\n      this.state = newState;\n    }\n  }, {\n    key: \"safeToken\",\n    value: function safeToken(index) {\n      if (index < 0) {\n        index = this.tokenList.length - index;\n      }\n\n      if (index < this.tokenList.length) {\n        return this.tokenList[index];\n      }\n\n      return this.tokenList[this.tokenList.length - 1];\n    }\n  }, {\n    key: \"isNonSpecialPatternChar\",\n    value: function isNonSpecialPatternChar(index, value) {\n      var token = this.safeToken(index);\n      return token.value === value && (token.type === \"CHAR\" || token.type === \"ESCAPED_CHAR\" || token.type === \"INVALID_CHAR\");\n    }\n  }, {\n    key: \"isProtocolSuffix\",\n    value: function isProtocolSuffix() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \":\");\n    }\n  }, {\n    key: \"nextIsAuthoritySlashes\",\n    value: function nextIsAuthoritySlashes() {\n      return this.isNonSpecialPatternChar(this.tokenIndex + 1, \"/\") && this.isNonSpecialPatternChar(this.tokenIndex + 2, \"/\");\n    }\n  }, {\n    key: \"isIdentityTerminator\",\n    value: function isIdentityTerminator() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \"@\");\n    }\n  }, {\n    key: \"isPasswordPrefix\",\n    value: function isPasswordPrefix() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \":\");\n    }\n  }, {\n    key: \"isPortPrefix\",\n    value: function isPortPrefix() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \":\");\n    }\n  }, {\n    key: \"isPathnameStart\",\n    value: function isPathnameStart() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \"/\");\n    }\n  }, {\n    key: \"isSearchPrefix\",\n    value: function isSearchPrefix() {\n      if (this.isNonSpecialPatternChar(this.tokenIndex, \"?\")) {\n        return true;\n      }\n\n      if (this.tokenList[this.tokenIndex].value !== \"?\") {\n        return false;\n      }\n\n      var previousToken = this.safeToken(this.tokenIndex - 1);\n      return previousToken.type !== \"NAME\" && previousToken.type !== \"PATTERN\" && previousToken.type !== \"CLOSE\" && previousToken.type !== \"ASTERISK\";\n    }\n  }, {\n    key: \"isHashPrefix\",\n    value: function isHashPrefix() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \"#\");\n    }\n  }, {\n    key: \"isGroupOpen\",\n    value: function isGroupOpen() {\n      return this.tokenList[this.tokenIndex].type == \"OPEN\";\n    }\n  }, {\n    key: \"isGroupClose\",\n    value: function isGroupClose() {\n      return this.tokenList[this.tokenIndex].type == \"CLOSE\";\n    }\n  }, {\n    key: \"isIPv6Open\",\n    value: function isIPv6Open() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \"[\");\n    }\n  }, {\n    key: \"isIPv6Close\",\n    value: function isIPv6Close() {\n      return this.isNonSpecialPatternChar(this.tokenIndex, \"]\");\n    }\n  }, {\n    key: \"makeComponentString\",\n    value: function makeComponentString() {\n      var token = this.tokenList[this.tokenIndex];\n      var componentCharStart = this.safeToken(this.componentStart).index;\n      return this.input.substring(componentCharStart, token.index);\n    }\n  }, {\n    key: \"computeShouldTreatAsStandardURL\",\n    value: function computeShouldTreatAsStandardURL() {\n      var options = {};\n      Object.assign(options, DEFAULT_OPTIONS);\n      options.encodePart = protocolEncodeCallback;\n      var regexp = pathToRegexp(this.makeComponentString(), void 0, options);\n      this.shouldTreatAsStandardURL = isSpecialScheme(regexp);\n    }\n  }]);\n\n  return Parser;\n}(); // src/url-pattern.ts\n\n\nvar COMPONENTS = [\"protocol\", \"username\", \"password\", \"hostname\", \"port\", \"pathname\", \"search\", \"hash\"];\nvar DEFAULT_PATTERN = \"*\";\n\nfunction extractValues(url, baseURL) {\n  if (typeof url !== \"string\") {\n    throw new TypeError(\"parameter 1 is not of type 'string'.\");\n  }\n\n  var o = new URL(url, baseURL);\n  return {\n    protocol: o.protocol.substring(0, o.protocol.length - 1),\n    username: o.username,\n    password: o.password,\n    hostname: o.hostname,\n    port: o.port,\n    pathname: o.pathname,\n    search: o.search != \"\" ? o.search.substring(1, o.search.length) : void 0,\n    hash: o.hash != \"\" ? o.hash.substring(1, o.hash.length) : void 0\n  };\n}\n\nfunction processBaseURLString(input, isPattern) {\n  if (!isPattern) {\n    return input;\n  }\n\n  return escapePatternString(input);\n}\n\nfunction applyInit(o, init, isPattern) {\n  var baseURL;\n\n  if (typeof init.baseURL === \"string\") {\n    try {\n      baseURL = new URL(init.baseURL);\n      o.protocol = processBaseURLString(baseURL.protocol.substring(0, baseURL.protocol.length - 1), isPattern);\n      o.username = processBaseURLString(baseURL.username, isPattern);\n      o.password = processBaseURLString(baseURL.password, isPattern);\n      o.hostname = processBaseURLString(baseURL.hostname, isPattern);\n      o.port = processBaseURLString(baseURL.port, isPattern);\n      o.pathname = processBaseURLString(baseURL.pathname, isPattern);\n      o.search = processBaseURLString(baseURL.search.substring(1, baseURL.search.length), isPattern);\n      o.hash = processBaseURLString(baseURL.hash.substring(1, baseURL.hash.length), isPattern);\n    } catch (_unused) {\n      throw new TypeError(\"invalid baseURL '\".concat(init.baseURL, \"'.\"));\n    }\n  }\n\n  if (typeof init.protocol === \"string\") {\n    o.protocol = canonicalizeProtocol(init.protocol, isPattern);\n  }\n\n  if (typeof init.username === \"string\") {\n    o.username = canonicalizeUsername(init.username, isPattern);\n  }\n\n  if (typeof init.password === \"string\") {\n    o.password = canonicalizePassword(init.password, isPattern);\n  }\n\n  if (typeof init.hostname === \"string\") {\n    o.hostname = canonicalizeHostname(init.hostname, isPattern);\n  }\n\n  if (typeof init.port === \"string\") {\n    o.port = canonicalizePort(init.port, o.protocol, isPattern);\n  }\n\n  if (typeof init.pathname === \"string\") {\n    o.pathname = init.pathname;\n\n    if (baseURL && !isAbsolutePathname(o.pathname, isPattern)) {\n      var slashIndex = baseURL.pathname.lastIndexOf(\"/\");\n\n      if (slashIndex >= 0) {\n        o.pathname = processBaseURLString(baseURL.pathname.substring(0, slashIndex + 1), isPattern) + o.pathname;\n      }\n    }\n\n    o.pathname = canonicalizePathname(o.pathname, o.protocol, isPattern);\n  }\n\n  if (typeof init.search === \"string\") {\n    o.search = canonicalizeSearch(init.search, isPattern);\n  }\n\n  if (typeof init.hash === \"string\") {\n    o.hash = canonicalizeHash(init.hash, isPattern);\n  }\n\n  return o;\n}\n\nfunction escapePatternString(value) {\n  return value.replace(/([+*?:{}()\\\\])/g, \"\\\\$1\");\n}\n\nfunction escapeRegexpString(value) {\n  return value.replace(/([.+*?^${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\nfunction tokensToPattern(tokens, options) {\n  var wildcardPattern = \".*\";\n  var segmentWildcardPattern = \"[^\".concat(escapeRegexpString(options.delimiter === void 0 ? \"/#?\" : options.delimiter), \"]+?\");\n  var regexIdentifierPart2 = /(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA827\\uA82C\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDE80-\\uDEA9\\uDEAB\\uDEAC\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD47\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDCE-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E-\\uDC61\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD35\\uDD37\\uDD38\\uDD3B-\\uDD43\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3\\uDFE4\\uDFF0\\uDFF1]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A]|\\uDB40[\\uDD00-\\uDDEF])/;\n  var result = \"\";\n\n  for (var i = 0; i < tokens.length; ++i) {\n    var token = tokens[i];\n    var lastToken = i > 0 ? tokens[i - 1] : null;\n    var nextToken = i < tokens.length - 1 ? tokens[i + 1] : null;\n\n    if (typeof token === \"string\") {\n      result += escapePatternString(token);\n      continue;\n    }\n\n    if (token.pattern === \"\") {\n      if (token.modifier === \"\") {\n        result += escapePatternString(token.prefix);\n        continue;\n      }\n\n      result += \"{\".concat(escapePatternString(token.prefix), \"}\").concat(token.modifier);\n      continue;\n    }\n\n    var customName = typeof token.name !== \"number\";\n    var optionsPrefixes = options.prefixes !== void 0 ? options.prefixes : \"./\";\n    var needsGrouping = token.suffix !== \"\" || token.prefix !== \"\" && (token.prefix.length !== 1 || !optionsPrefixes.includes(token.prefix));\n\n    if (!needsGrouping && customName && token.pattern === segmentWildcardPattern && token.modifier === \"\" && nextToken && !nextToken.prefix && !nextToken.suffix) {\n      if (typeof nextToken === \"string\") {\n        var code = nextToken.length > 0 ? nextToken[0] : \"\";\n        needsGrouping = regexIdentifierPart2.test(code);\n      } else {\n        needsGrouping = typeof nextToken.name === \"number\";\n      }\n    }\n\n    if (!needsGrouping && token.prefix === \"\" && lastToken && typeof lastToken === \"string\" && lastToken.length > 0) {\n      var _code = lastToken[lastToken.length - 1];\n      needsGrouping = optionsPrefixes.includes(_code);\n    }\n\n    if (needsGrouping) {\n      result += \"{\";\n    }\n\n    result += escapePatternString(token.prefix);\n\n    if (customName) {\n      result += \":\".concat(token.name);\n    }\n\n    if (token.pattern === wildcardPattern) {\n      if (!customName && (!lastToken || typeof lastToken === \"string\" || lastToken.modifier || needsGrouping || token.prefix !== \"\")) {\n        result += \"*\";\n      } else {\n        result += \"(\".concat(wildcardPattern, \")\");\n      }\n    } else if (token.pattern === segmentWildcardPattern) {\n      if (!customName) {\n        result += \"(\".concat(segmentWildcardPattern, \")\");\n      }\n    } else {\n      result += \"(\".concat(token.pattern, \")\");\n    }\n\n    if (token.pattern === segmentWildcardPattern && customName && token.suffix !== \"\") {\n      if (regexIdentifierPart2.test(token.suffix[0])) {\n        result += \"\\\\\";\n      }\n    }\n\n    result += escapePatternString(token.suffix);\n\n    if (needsGrouping) {\n      result += \"}\";\n    }\n\n    result += token.modifier;\n  }\n\n  return result;\n}\n\nvar URLPattern = /*#__PURE__*/function () {\n  function URLPattern() {\n    var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var baseURLOrOptions = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, URLPattern);\n\n    this.regexp = {};\n    this.keys = {};\n    this.component_pattern = {};\n\n    try {\n      var baseURL = void 0;\n\n      if (typeof baseURLOrOptions === \"string\") {\n        baseURL = baseURLOrOptions;\n      } else {\n        options = baseURLOrOptions;\n      }\n\n      if (typeof init === \"string\") {\n        var parser = new Parser(init);\n        parser.parse();\n        init = parser.result;\n\n        if (baseURL === void 0 && typeof init.protocol !== \"string\") {\n          throw new TypeError(\"A base URL must be provided for a relative constructor string.\");\n        }\n\n        init.baseURL = baseURL;\n      } else {\n        if (!init || _typeof(init) !== \"object\") {\n          throw new TypeError(\"parameter 1 is not of type 'string' and cannot convert to dictionary.\");\n        }\n\n        if (baseURL) {\n          throw new TypeError(\"parameter 1 is not of type 'string'.\");\n        }\n      }\n\n      if (typeof options === \"undefined\") {\n        options = {\n          ignoreCase: false\n        };\n      }\n\n      var ignoreCaseOptions = {\n        ignoreCase: options.ignoreCase === true\n      };\n      var defaults = {\n        pathname: DEFAULT_PATTERN,\n        protocol: DEFAULT_PATTERN,\n        username: DEFAULT_PATTERN,\n        password: DEFAULT_PATTERN,\n        hostname: DEFAULT_PATTERN,\n        port: DEFAULT_PATTERN,\n        search: DEFAULT_PATTERN,\n        hash: DEFAULT_PATTERN\n      };\n      this.pattern = applyInit(defaults, init, true);\n\n      if (defaultPortForProtocol(this.pattern.protocol) === this.pattern.port) {\n        this.pattern.port = \"\";\n      }\n\n      var component;\n\n      var _iterator3 = _createForOfIteratorHelper(COMPONENTS),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          component = _step3.value;\n          if (!(component in this.pattern)) continue;\n          var options2 = {};\n          var pattern = this.pattern[component];\n          this.keys[component] = [];\n\n          switch (component) {\n            case \"protocol\":\n              Object.assign(options2, DEFAULT_OPTIONS);\n              options2.encodePart = protocolEncodeCallback;\n              break;\n\n            case \"username\":\n              Object.assign(options2, DEFAULT_OPTIONS);\n              options2.encodePart = usernameEncodeCallback;\n              break;\n\n            case \"password\":\n              Object.assign(options2, DEFAULT_OPTIONS);\n              options2.encodePart = passwordEncodeCallback;\n              break;\n\n            case \"hostname\":\n              Object.assign(options2, HOSTNAME_OPTIONS);\n\n              if (treatAsIPv6Hostname(pattern)) {\n                options2.encodePart = ipv6HostnameEncodeCallback;\n              } else {\n                options2.encodePart = hostnameEncodeCallback;\n              }\n\n              break;\n\n            case \"port\":\n              Object.assign(options2, DEFAULT_OPTIONS);\n              options2.encodePart = portEncodeCallback;\n              break;\n\n            case \"pathname\":\n              if (isSpecialScheme(this.regexp.protocol)) {\n                Object.assign(options2, PATHNAME_OPTIONS, ignoreCaseOptions);\n                options2.encodePart = standardURLPathnameEncodeCallback;\n              } else {\n                Object.assign(options2, DEFAULT_OPTIONS, ignoreCaseOptions);\n                options2.encodePart = pathURLPathnameEncodeCallback;\n              }\n\n              break;\n\n            case \"search\":\n              Object.assign(options2, DEFAULT_OPTIONS, ignoreCaseOptions);\n              options2.encodePart = searchEncodeCallback;\n              break;\n\n            case \"hash\":\n              Object.assign(options2, DEFAULT_OPTIONS, ignoreCaseOptions);\n              options2.encodePart = hashEncodeCallback;\n              break;\n          }\n\n          try {\n            var tokens = parse(pattern, options2);\n            this.regexp[component] = tokensToRegexp(tokens, this.keys[component], options2);\n            this.component_pattern[component] = tokensToPattern(tokens, options2);\n          } catch (_unused2) {\n            throw new TypeError(\"invalid \".concat(component, \" pattern '\").concat(this.pattern[component], \"'.\"));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    } catch (err) {\n      throw new TypeError(\"Failed to construct 'URLPattern': \".concat(err.message));\n    }\n  }\n\n  _createClass(URLPattern, [{\n    key: \"test\",\n    value: function test() {\n      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var baseURL = arguments.length > 1 ? arguments[1] : undefined;\n      var values = {\n        pathname: \"\",\n        protocol: \"\",\n        username: \"\",\n        password: \"\",\n        hostname: \"\",\n        port: \"\",\n        search: \"\",\n        hash: \"\"\n      };\n\n      if (typeof input !== \"string\" && baseURL) {\n        throw new TypeError(\"parameter 1 is not of type 'string'.\");\n      }\n\n      if (typeof input === \"undefined\") {\n        return false;\n      }\n\n      try {\n        if (_typeof(input) === \"object\") {\n          values = applyInit(values, input, false);\n        } else {\n          values = applyInit(values, extractValues(input, baseURL), false);\n        }\n      } catch (err) {\n        return false;\n      }\n\n      var component;\n\n      var _iterator4 = _createForOfIteratorHelper(COMPONENTS),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          component = _step4.value;\n\n          if (!this.regexp[component].exec(values[component])) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"exec\",\n    value: function exec() {\n      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var baseURL = arguments.length > 1 ? arguments[1] : undefined;\n      var values = {\n        pathname: \"\",\n        protocol: \"\",\n        username: \"\",\n        password: \"\",\n        hostname: \"\",\n        port: \"\",\n        search: \"\",\n        hash: \"\"\n      };\n\n      if (typeof input !== \"string\" && baseURL) {\n        throw new TypeError(\"parameter 1 is not of type 'string'.\");\n      }\n\n      if (typeof input === \"undefined\") {\n        return;\n      }\n\n      try {\n        if (_typeof(input) === \"object\") {\n          values = applyInit(values, input, false);\n        } else {\n          values = applyInit(values, extractValues(input, baseURL), false);\n        }\n      } catch (err) {\n        return null;\n      }\n\n      var result = {};\n\n      if (baseURL) {\n        result.inputs = [input, baseURL];\n      } else {\n        result.inputs = [input];\n      }\n\n      var component;\n\n      var _iterator5 = _createForOfIteratorHelper(COMPONENTS),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          component = _step5.value;\n          var match = this.regexp[component].exec(values[component]);\n\n          if (!match) {\n            return null;\n          }\n\n          var groups = {};\n\n          var _iterator6 = _createForOfIteratorHelper(this.keys[component].entries()),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var _step6$value = _slicedToArray(_step6.value, 2),\n                  i = _step6$value[0],\n                  key = _step6$value[1];\n\n              if (typeof key.name === \"string\" || typeof key.name === \"number\") {\n                var value = match[i + 1];\n                groups[key.name] = value;\n              }\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          result[component] = {\n            input: values[component] || \"\",\n            groups: groups\n          };\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return this.component_pattern.protocol;\n    }\n  }, {\n    key: \"username\",\n    get: function get() {\n      return this.component_pattern.username;\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      return this.component_pattern.password;\n    }\n  }, {\n    key: \"hostname\",\n    get: function get() {\n      return this.component_pattern.hostname;\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      return this.component_pattern.port;\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      return this.component_pattern.pathname;\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      return this.component_pattern.search;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this.component_pattern.hash;\n    }\n  }]);\n\n  return URLPattern;\n}();\n\nexport { URLPattern };","import { URLPattern } from \"./dist/urlpattern.js\";\nexport { URLPattern };\n\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/ReportContainer.vue?fd83","webpack:///./app/javascript/dashboard/composables/useReportMetrics.js","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/components/ChartElements/ChartStats.vue?11a2","webpack:///ChartStats.vue","webpack:///app/javascript/dashboard/routes/dashboard/settings/reports/ReportContainer.vue","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/ReportContainer.vue?6b6f","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/components/ChartElements/ChartStats.vue","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/components/ChartElements/ChartStats.vue?0922","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/ReportContainer.vue","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/Index.vue?3aee","webpack:///app/javascript/dashboard/routes/dashboard/settings/reports/Index.vue","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/Index.vue?cefc","webpack:///./app/javascript/dashboard/routes/dashboard/settings/reports/Index.vue"],"names":["useReportMetrics","accountSummaryKey","accountSummary","useMapGetter","calculateTrend","key","value","previous","diff","Math","round","isAverageMetricType","includes","displayMetric","formatTime","Number","toLocaleString","props","_vm","this","_c","_self","_setup","_setupProxy","staticClass","_v","_s","metric","NAME","KEY","trend","class","trendColor","_e","_l","attrs","accountReport","isFetching","$t","data","getCollection","getChartOptions","component","on","downloadAgentReports","onFilterChange","groupBy"],"mappings":"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","file":"js/106-ec57563da3f72caf5a95.chunk.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"grid grid-cols-1 p-2 bg-white border rounded-md md:grid-cols-2 lg:grid-cols-3 dark:bg-slate-800 border-slate-100 dark:border-slate-700\"},_vm._l((_vm.metrics),function(metric){return _c('div',{key:metric.KEY,staticClass:\"p-4 mb-3 rounded-md\"},[_c('ChartStats',{attrs:{\"metric\":metric,\"account-summary-key\":_vm.accountSummaryKey}}),_vm._v(\" \"),_c('div',{staticClass:\"mt-4 h-72\"},[(_vm.accountReport.isFetching[metric.KEY])?_c('woot-loading-state',{staticClass:\"text-xs\",attrs:{\"message\":_vm.$t('REPORT.LOADING_CHART')}}):_c('div',{staticClass:\"flex items-center justify-center h-72\"},[(_vm.accountReport.data[metric.KEY].length)?_c('woot-bar',{staticClass:\"w-full h-72\",attrs:{\"collection\":_vm.getCollection(metric),\"chart-options\":_vm.getChartOptions(metric)}}):_c('span',{staticClass:\"text-sm text-slate-600\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('REPORT.NO_ENOUGH_DATA'))+\"\\n        \")])],1)],1)],1)}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { useMapGetter } from 'dashboard/composables/store';\nimport { formatTime } from '@chatwoot/utils';\n\n/**\n * A composable function for report metrics calculations and display.\n *\n * @param {string} [accountSummaryKey='getAccountSummary'] - The key for accessing account summary data.\n * @returns {Object} An object containing utility functions for report metrics.\n */\nexport function useReportMetrics(accountSummaryKey = 'getAccountSummary') {\n  const accountSummary = useMapGetter(accountSummaryKey);\n\n  /**\n   * Calculates the trend percentage for a given metric.\n   *\n   * @param {string} key - The key of the metric to calculate trend for.\n   * @returns {number} The calculated trend percentage, rounded to the nearest integer.\n   */\n  const calculateTrend = key => {\n    if (!accountSummary.value.previous[key]) return 0;\n    const diff = accountSummary.value[key] - accountSummary.value.previous[key];\n    return Math.round((diff / accountSummary.value.previous[key]) * 100);\n  };\n\n  /**\n   * Checks if a given metric key represents an average metric type.\n   *\n   * @param {string} key - The key of the metric to check.\n   * @returns {boolean} True if the metric is an average type, false otherwise.\n   */\n  const isAverageMetricType = key => {\n    return [\n      'avg_first_response_time',\n      'avg_resolution_time',\n      'reply_time',\n    ].includes(key);\n  };\n\n  /**\n   * Formats and displays a metric value based on its type.\n   *\n   * @param {string} key - The key of the metric to display.\n   * @returns {string} The formatted metric value as a string.\n   */\n  const displayMetric = key => {\n    if (isAverageMetricType(key)) {\n      return formatTime(accountSummary.value[key]);\n    }\n    return Number(accountSummary.value[key] || '').toLocaleString();\n  };\n\n  return {\n    calculateTrend,\n    isAverageMetricType,\n    displayMetric,\n  };\n}\n","import mod from \"-!../../../../../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartStats.vue?vue&type=script&setup=true&lang=js&\"; export default mod; export * from \"-!../../../../../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartStats.vue?vue&type=script&setup=true&lang=js&\"","<script setup>\nimport { useReportMetrics } from 'dashboard/composables/useReportMetrics';\n\nconst props = defineProps({\n  metric: {\n    type: Object,\n    default: () => ({}),\n  },\n  accountSummaryKey: {\n    type: String,\n    default: 'getAccountSummary',\n  },\n});\n\nconst { calculateTrend, displayMetric, isAverageMetricType } = useReportMetrics(\n  props.accountSummaryKey\n);\n\nconst trendColor = (value, key) => {\n  if (isAverageMetricType(key)) {\n    return value > 0\n      ? 'border-red-500 text-red-500'\n      : 'border-green-500 text-green-500';\n  }\n  return value < 0\n    ? 'border-red-500 text-red-500'\n    : 'border-green-500 text-green-500';\n};\n</script>\n\n<template>\n  <div class=\"text-slate-900 dark:text-slate-100\">\n    <span class=\"text-sm\">\n      {{ metric.NAME }}\n    </span>\n    <div class=\"flex items-end\">\n      <div class=\"text-xl font-medium\">\n        {{ displayMetric(metric.KEY) }}\n      </div>\n      <div v-if=\"metric.trend\" class=\"text-xs ml-4 flex items-center mb-0.5\">\n        <div\n          v-if=\"metric.trend < 0\"\n          class=\"h-0 w-0 border-x-4 medium border-x-transparent border-t-[8px] mr-1\"\n          :class=\"trendColor(metric.trend, metric.KEY)\"\n        />\n        <div\n          v-else\n          class=\"h-0 w-0 border-x-4 medium border-x-transparent border-b-[8px] mr-1\"\n          :class=\"trendColor(metric.trend, metric.KEY)\"\n        />\n        <span class=\"font-medium\" :class=\"trendColor(metric.trend, metric.KEY)\">\n          {{ calculateTrend(metric.KEY) }}%\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n","<script>\nimport { mapGetters } from 'vuex';\nimport { useReportMetrics } from 'dashboard/composables/useReportMetrics';\nimport { GROUP_BY_FILTER, METRIC_CHART } from './constants';\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport format from 'date-fns/format';\nimport { formatTime } from '@chatwoot/utils';\nimport ChartStats from './components/ChartElements/ChartStats.vue';\n\nexport default {\n  components: { ChartStats },\n  props: {\n    groupBy: {\n      type: Object,\n      default: () => ({}),\n    },\n    accountSummaryKey: {\n      type: String,\n      default: 'getAccountSummary',\n    },\n    reportKeys: {\n      type: Object,\n      default: () => ({\n        CONVERSATIONS: 'conversations_count',\n        INCOMING_MESSAGES: 'incoming_messages_count',\n        OUTGOING_MESSAGES: 'outgoing_messages_count',\n        FIRST_RESPONSE_TIME: 'avg_first_response_time',\n        RESOLUTION_TIME: 'avg_resolution_time',\n        RESOLUTION_COUNT: 'resolutions_count',\n        REPLY_TIME: 'reply_time',\n      }),\n    },\n  },\n  setup(props) {\n    const { calculateTrend, isAverageMetricType } = useReportMetrics(\n      props.accountSummaryKey\n    );\n    return { calculateTrend, isAverageMetricType };\n  },\n  computed: {\n    ...mapGetters({\n      accountReport: 'getAccountReports',\n    }),\n    metrics() {\n      const reportKeys = Object.keys(this.reportKeys);\n      const infoText = {\n        FIRST_RESPONSE_TIME: this.$t(\n          `REPORT.METRICS.FIRST_RESPONSE_TIME.INFO_TEXT`\n        ),\n        RESOLUTION_TIME: this.$t(`REPORT.METRICS.RESOLUTION_TIME.INFO_TEXT`),\n      };\n      return reportKeys.map(key => ({\n        NAME: this.$t(`REPORT.METRICS.${key}.NAME`),\n        KEY: this.reportKeys[key],\n        DESC: this.$t(`REPORT.METRICS.${key}.DESC`),\n        INFO_TEXT: infoText[key],\n        TOOLTIP_TEXT: `REPORT.METRICS.${key}.TOOLTIP_TEXT`,\n        trend: this.calculateTrend(this.reportKeys[key]),\n      }));\n    },\n  },\n  methods: {\n    getCollection(metric) {\n      if (!this.accountReport.data[metric.KEY]) {\n        return {};\n      }\n      const data = this.accountReport.data[metric.KEY];\n      const labels = data.map(element => {\n        if (this.groupBy?.period === GROUP_BY_FILTER[2].period) {\n          let week_date = new Date(fromUnixTime(element.timestamp));\n          const first_day = week_date.getDate() - week_date.getDay();\n          const last_day = first_day + 6;\n          const week_first_date = new Date(week_date.setDate(first_day));\n          const week_last_date = new Date(week_date.setDate(last_day));\n          return `${format(week_first_date, 'dd-MMM')} - ${format(\n            week_last_date,\n            'dd-MMM'\n          )}`;\n        }\n        if (this.groupBy?.period === GROUP_BY_FILTER[3].period) {\n          return format(fromUnixTime(element.timestamp), 'MMM-yyyy');\n        }\n        if (this.groupBy?.period === GROUP_BY_FILTER[4].period) {\n          return format(fromUnixTime(element.timestamp), 'yyyy');\n        }\n        return format(fromUnixTime(element.timestamp), 'dd-MMM');\n      });\n      const datasets = METRIC_CHART[metric.KEY].datasets.map(dataset => {\n        switch (dataset.type) {\n          case 'bar':\n            return {\n              ...dataset,\n              yAxisID: 'y-left',\n              label: metric.NAME,\n              data: data.map(element => element.value),\n            };\n          case 'line':\n            return {\n              ...dataset,\n              yAxisID: 'y-right',\n              label: this.metrics[0].NAME,\n              data: data.map(element => element.count),\n            };\n          default:\n            return dataset;\n        }\n      });\n      return {\n        labels,\n        datasets,\n      };\n    },\n    getChartOptions(metric) {\n      let tooltips = {};\n      if (this.isAverageMetricType(metric.KEY)) {\n        tooltips.callbacks = {\n          label: tooltipItem => {\n            return this.$t(metric.TOOLTIP_TEXT, {\n              metricValue: formatTime(tooltipItem.yLabel),\n              conversationCount:\n                this.accountReport.data[metric.KEY][tooltipItem.index].count,\n            });\n          },\n        };\n      }\n      return {\n        scales: METRIC_CHART[metric.KEY].scales,\n        tooltips: tooltips,\n      };\n    },\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"grid grid-cols-1 p-2 bg-white border rounded-md md:grid-cols-2 lg:grid-cols-3 dark:bg-slate-800 border-slate-100 dark:border-slate-700\"\n  >\n    <div\n      v-for=\"metric in metrics\"\n      :key=\"metric.KEY\"\n      class=\"p-4 mb-3 rounded-md\"\n    >\n      <ChartStats :metric=\"metric\" :account-summary-key=\"accountSummaryKey\" />\n      <div class=\"mt-4 h-72\">\n        <woot-loading-state\n          v-if=\"accountReport.isFetching[metric.KEY]\"\n          class=\"text-xs\"\n          :message=\"$t('REPORT.LOADING_CHART')\"\n        />\n        <div v-else class=\"flex items-center justify-center h-72\">\n          <woot-bar\n            v-if=\"accountReport.data[metric.KEY].length\"\n            :collection=\"getCollection(metric)\"\n            :chart-options=\"getChartOptions(metric)\"\n            class=\"w-full h-72\"\n          />\n          <span v-else class=\"text-sm text-slate-600\">\n            {{ $t('REPORT.NO_ENOUGH_DATA') }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartStats.vue?vue&type=template&id=9c8a8680&\"\nimport script from \"./ChartStats.vue?vue&type=script&setup=true&lang=js&\"\nexport * from \"./ChartStats.vue?vue&type=script&setup=true&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"text-slate-900 dark:text-slate-100\"},[_c('span',{staticClass:\"text-sm\"},[_vm._v(\"\\n    \"+_vm._s(_vm.metric.NAME)+\"\\n  \")]),_vm._v(\" \"),_c('div',{staticClass:\"flex items-end\"},[_c('div',{staticClass:\"text-xl font-medium\"},[_vm._v(\"\\n      \"+_vm._s(_setup.displayMetric(_vm.metric.KEY))+\"\\n    \")]),_vm._v(\" \"),(_vm.metric.trend)?_c('div',{staticClass:\"text-xs ml-4 flex items-center mb-0.5\"},[(_vm.metric.trend < 0)?_c('div',{staticClass:\"h-0 w-0 border-x-4 medium border-x-transparent border-t-[8px] mr-1\",class:_setup.trendColor(_vm.metric.trend, _vm.metric.KEY)}):_c('div',{staticClass:\"h-0 w-0 border-x-4 medium border-x-transparent border-b-[8px] mr-1\",class:_setup.trendColor(_vm.metric.trend, _vm.metric.KEY)}),_vm._v(\" \"),_c('span',{staticClass:\"font-medium\",class:_setup.trendColor(_vm.metric.trend, _vm.metric.KEY)},[_vm._v(\"\\n        \"+_vm._s(_setup.calculateTrend(_vm.metric.KEY))+\"%\\n      \")])]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ReportContainer.vue?vue&type=template&id=5a48177a&\"\nimport script from \"./ReportContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportContainer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"flex-1 p-4 overflow-auto\"},[_c('woot-button',{attrs:{\"color-scheme\":\"success\",\"class-names\":\"button--fixed-top\",\"icon\":\"arrow-download\"},on:{\"click\":_vm.downloadAgentReports}},[_vm._v(\"\\n    \"+_vm._s(_vm.$t('REPORT.DOWNLOAD_AGENT_REPORTS'))+\"\\n  \")]),_vm._v(\" \"),_c('ReportFilterSelector',{attrs:{\"show-agents-filter\":false,\"show-group-by-filter\":\"\"},on:{\"filterChange\":_vm.onFilterChange}}),_vm._v(\" \"),_c('ReportContainer',{attrs:{\"group-by\":_vm.groupBy}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport { useAlert } from 'dashboard/composables';\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport format from 'date-fns/format';\nimport ReportFilterSelector from './components/FilterSelector.vue';\nimport { GROUP_BY_FILTER } from './constants';\nimport { REPORTS_EVENTS } from '../../../../helper/AnalyticsHelper/events';\nimport ReportContainer from './ReportContainer.vue';\n\nconst REPORTS_KEYS = {\n  CONVERSATIONS: 'conversations_count',\n  INCOMING_MESSAGES: 'incoming_messages_count',\n  OUTGOING_MESSAGES: 'outgoing_messages_count',\n  FIRST_RESPONSE_TIME: 'avg_first_response_time',\n  RESOLUTION_TIME: 'avg_resolution_time',\n  RESOLUTION_COUNT: 'resolutions_count',\n  REPLY_TIME: 'reply_time',\n};\n\nexport default {\n  name: 'ConversationReports',\n  components: {\n    ReportFilterSelector,\n    ReportContainer,\n  },\n  data() {\n    return {\n      from: 0,\n      to: 0,\n      groupBy: GROUP_BY_FILTER[1],\n      businessHours: false,\n    };\n  },\n  methods: {\n    fetchAllData() {\n      this.fetchAccountSummary();\n      this.fetchChartData();\n    },\n    fetchAccountSummary() {\n      try {\n        this.$store.dispatch('fetchAccountSummary', this.getRequestPayload());\n      } catch {\n        useAlert(this.$t('REPORT.SUMMARY_FETCHING_FAILED'));\n      }\n    },\n    fetchChartData() {\n      [\n        'CONVERSATIONS',\n        'INCOMING_MESSAGES',\n        'OUTGOING_MESSAGES',\n        'FIRST_RESPONSE_TIME',\n        'RESOLUTION_TIME',\n        'RESOLUTION_COUNT',\n        'REPLY_TIME',\n      ].forEach(async key => {\n        try {\n          await this.$store.dispatch('fetchAccountReport', {\n            metric: REPORTS_KEYS[key],\n            ...this.getRequestPayload(),\n          });\n        } catch {\n          useAlert(this.$t('REPORT.DATA_FETCHING_FAILED'));\n        }\n      });\n    },\n    getRequestPayload() {\n      const { from, to, groupBy, businessHours } = this;\n\n      return {\n        from,\n        to,\n        groupBy: groupBy?.period,\n        businessHours,\n      };\n    },\n    downloadAgentReports() {\n      const { from, to } = this;\n      const fileName = `agent-report-${format(\n        fromUnixTime(to),\n        'dd-MM-yyyy'\n      )}.csv`;\n      this.$store.dispatch('downloadAgentReports', { from, to, fileName });\n    },\n    onFilterChange({ from, to, groupBy, businessHours }) {\n      this.from = from;\n      this.to = to;\n      this.groupBy = groupBy;\n      this.businessHours = businessHours;\n      this.fetchAllData();\n\n      this.$track(REPORTS_EVENTS.FILTER_REPORT, {\n        filterValue: { from, to, groupBy, businessHours },\n        reportType: 'conversations',\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"flex-1 p-4 overflow-auto\">\n    <woot-button\n      color-scheme=\"success\"\n      class-names=\"button--fixed-top\"\n      icon=\"arrow-download\"\n      @click=\"downloadAgentReports\"\n    >\n      {{ $t('REPORT.DOWNLOAD_AGENT_REPORTS') }}\n    </woot-button>\n    <ReportFilterSelector\n      :show-agents-filter=\"false\"\n      show-group-by-filter\n      @filterChange=\"onFilterChange\"\n    />\n    <ReportContainer :group-by=\"groupBy\" />\n  </div>\n</template>\n","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=600f2486&\"\nimport script from \"./Index.vue?vue&type=script&lang=js&\"\nexport * from \"./Index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}